  పరిచయం
      జావా ఒక ఉమ్మడి-ప్రయోజన కంప్యూటర్-ప్రోగ్రామింగ్ లాంగ్వేజ్, ఇది ఉమ్మడి, తరగతి-ఆధారిత, ఆబ్జెక్ట్-ఓరియంటెడ్, [15] మరియు ప్రత్యేకంగా సాధ్యమైనంత తక్కువ అమలు పరమాణువులుగా రూపొందించబడింది. అప్లికేషన్ డెవలపర్లు "ఎప్పుడైనా వ్రాసి, ఎక్కడైనా అమలు చేయవచ్చని" (WORA), [16] అనగా సంకలనం చేయబడిన జావా కోడ్ పునఃపరిశీలన అవసరం లేకుండా జావాకు మద్దతు ఇచ్చే అన్ని ప్లాట్ఫారమ్లలో అమలు చేయగలదు. [17] జావా అప్లికేషన్లు సాధారణంగా కంప్యూటర్ ఆర్కిటెక్చర్తో సంబంధం లేకుండా ఏదైనా జావా వర్చువల్ మెషీన్ను (JVM) అమలు చేయగల బైటికోడ్కు సంకలనం చేయబడతాయి. 2016 నాటికి, జావా అత్యంత ఉపయోగకరమైన ప్రోగ్రామింగ్ లాంగ్వేజ్లలో ఒకటి, [18] [19] [20] [21] ముఖ్యంగా క్లయింట్-సర్వర్ వెబ్ అనువర్తనాలకు, 9 మిలియన్ డెవలపర్లు నివేదించింది. [22] జావా మొదట సన్ మైక్రోసిస్టమ్స్ వద్ద జేమ్స్ గోస్లింగ్ చేత (ఒరాకిల్ కార్పొరేషన్ చేత కొనుగోలు చేయబడినది) మరియు 1995 లో సన్ మైక్రోసిస్టమ్స్ 'జావా ప్లాట్ఫాం యొక్క ప్రధాన భాగముగా విడుదల చేసింది. ఈ భాష చిన్నవాటి నుండి చాలా అసలు లక్షణాలను కలిగి ఉంది, C మరియు C ++ లతో సమానమైన వాక్యనిర్మాణంతో, కానీ వీటిలో వాటి కంటే తక్కువ తక్కువ-స్థాయి సౌకర్యాలు ఉన్నాయి. అసలు మరియు సూచన అమలు జావా కంపైలర్లు, వర్చ్యువల్ మిషన్లు మరియు క్లాస్ గ్రంథాలయాలు వాస్తవంగా యాజమాన్య లైసెన్సుల క్రింద సన్ చేత విడుదల చేయబడ్డాయి. మే 2007 నాటికి, జావా కమ్యూనిటీ ప్రాసెస్ యొక్క ప్రత్యేకతత్వానికి అనుగుణంగా, సన్ దాని జనరల్ పబ్లిక్ లైసెన్సు పరిధిలోని చాలా జావా సాంకేతికతలను పునఃప్రారంభించింది. ఇతరులు కూడా ఈ సన్ సాంకేతికతల యొక్క ప్రత్యామ్నాయ అమలును అభివృద్ధి చేశారు, ఉదాహరణకు జావా కోసం GNU కంపైలర్ (బైటికోడ్ కంపైలర్), GNU క్లాస్ పాత్ (స్టాండర్డ్ గ్రంథాలయాలు), మరియు ఐసిడ్టీ-వెబ్ (అప్లెట్ల కోసం బ్రౌజర్ ప్లగ్ఇన్). తాజా వెర్షన్ జావా 11, సెప్టెంబర్ 25, 2018 న విడుదలైంది, ఇది ఆరు నెలల తర్వాత జావా 10 ను అనుసరిస్తుంది, [23] కొత్త విడుదల షెడ్యూల్కు అనుగుణంగా ఉంది. జావా 8 ఇప్పటికీ మద్దతుతో ఉంది కానీ జావా 9 కోసం భద్రతా నవీకరణలు లేవు. [24] జావా 8 కన్నా ముందుగా సంస్కరణలు వాణిజ్యపరంగా సంస్థలచే మద్దతు ఇవ్వబడ్డాయి; ఉదా: అక్టోబరు 2017 నాటికి ఒరాకిల్ తిరిగి జావా 6 కు చేరుకుంటుంది (అయితే అవి ఇప్పటికీ "విండోస్ కంప్యూటర్ల నుండి ముందు జావా 8" [25] ను అన్ఇన్స్టాల్ చేయాలని సిఫార్సు చేస్తాయి).
    
  చరిత్ర
      డ్యూక్, జావా మస్కట్
      జావా సృష్టికర్త జేమ్స్ గోస్లింగ్, 2008 లో
      2002 నుండి 2018 వరకు TIOBE ప్రోగ్రామింగ్ లాంగ్వేజ్ ప్రాచుర్యం ఇండెక్స్ గ్రాఫ్. ఒక దశాబ్ద కాలంపాటు, జావా (నీలం) మరియు సి (నలుపు) అగ్ర స్థానం కోసం పోటీ పడ్డాయి. జేమ్స్ గోస్లింగ్, మైక్ షెరిడాన్, మరియు ప్యాట్రిక్ నఘ్టన్ జూన్ 1991 లో జావా లాంగ్వేజ్ ప్రాజెక్ట్ను ప్రారంభించారు. జావా వాస్తవానికి ఇంటరాక్టివ్ టెలివిజన్ కోసం రూపొందించారు, అయితే ఆ సమయంలో డిజిటల్ కేబుల్ టెలివిజన్ పరిశ్రమకు ఇది చాలా ముందుకు వచ్చింది. [27] గోస్లింగ్ కార్యాలయానికి వెలుపల ఉన్న ఒక ఓక్ వృక్షం తర్వాత ఈ భాష ప్రారంభంలో ఓక్ అని పిలిచారు. తరువాత ఈ ప్రాజెక్టు గ్రీన్ అనే పేరు వచ్చింది మరియు జావా కాఫీ పేరును జావా గా మార్చింది. [28] గోస్లింగ్ ఒక సి / సి ++ - శైలి సింటాక్స్తో జావాను రూపొందించింది, ఆ సిస్టమ్ మరియు అప్లికేషన్ ప్రోగ్రామర్లు బాగా తెలిసివుండేవి.
సన్ మైక్రోసిస్టమ్స్ 1996 లో జావా 1.0 గా మొట్టమొదటి ప్రజా అమలును విడుదల చేసింది. [30] ఇది "వ్రైట్ వన్, రన్ ఎనీవేర్లో" (WORA) వాగ్దానం చేసింది, ఇది ప్రసిద్ధ ప్లాట్ఫారమ్ల్లో ఏ-ధర ఖర్చులను అందించదు. చాలా సురక్షితమైనది మరియు ఆకృతీకరించదగిన భద్రత కలిగివున్నది, అది నెట్వర్క్-మరియు ఫైల్-యాక్సెస్ పరిమితులను అనుమతించింది. ప్రధాన వెబ్ బ్రౌజర్లు త్వరలో వెబ్ పుటలలో జావా అప్లికేషన్లను అమలు చేసే సామర్థ్యాన్ని కలిగి ఉన్నాయి మరియు జావా త్వరగా జనాదరణ పొందింది. జావా 1.0 భాష కంపైలర్ జావాలో తిరిగి వ్రాయబడింది, ఆర్థర్ వాన్ హాఫ్, జావా 1.0 భాషా వివరణతో కచ్చితంగా కట్టుబడి ఉండేది. [31] జావా 2 రావడంతో (డిసెంబరు 1998 - 1999 లో ప్రారంభంలో J2SE 1.2 గా విడుదలైంది), కొత్త వెర్షన్లు వివిధ రకాలైన ప్లాట్ఫారమ్ల కోసం బహుళ కాన్ఫిగరేషన్లను నిర్మించాయి. J2EE సాంకేతిక పరిజ్ఞానాలు మరియు API అనువర్తనాలను సాధారణంగా సర్వర్ పరిసరాలలో అమలవుతుంది, అయితే J2ME మొబైల్ అనువర్తనాల కోసం ఆప్టిమైజ్ చేయబడిన API లు ఉన్నాయి. డెస్క్టాప్ వెర్షన్ పేరు J2SE గా మార్చబడింది. 2006 లో, మార్కెటింగ్ ప్రయోజనాలకు, సన్ వరుసగా జావా EE, జావా ME మరియు జావా SE, వంటి కొత్త J2 వెర్షన్లను మార్చింది.
    
    రూపకల్పన
ఒక Linux- ఆధారిత వ్యవస్థ అనేది మాడ్యులర్ యునిక్స్-వంటి ఆపరేటింగ్ సిస్టం, ఇది 1970 ల మరియు 1980 లలో యునిక్స్ లో స్థాపించబడిన సూత్రాల నుండి దాని ప్రాథమిక రూపకల్పన యొక్క చాలా ఉత్పాదనలను తీసుకుంది. ఇటువంటి వ్యవస్థ ఒక మోనోలిథిక్ కెర్నల్, లైనక్స్ కెర్నల్ను ఉపయోగిస్తుంది, ఇది ప్రాసెస్ నియంత్రణ, నెట్వర్కింగ్, పార్టులకు యాక్సెస్ మరియు ఫైల్ వ్యవస్థలను నిర్వహిస్తుంది. పరికర డ్రైవర్లు నేరుగా కెర్నల్తో అనుసంధానించబడి ఉంటాయి, లేదా కంప్యూటరు నడుస్తున్నప్పుడు లోడ్ అయిన గుణకాలుగా జతచేయబడతాయి. లినక్స్ కెర్నెల్ ఆధారంగా ఉన్న చాలా వ్యవస్థల్లో గ్నూ యూజర్ల్యాండ్ కీలక భాగం, ఇది Android గుర్తించదగిన మినహాయింపు. కెర్నల్-యూజర్స్పేస్ ఇంటర్ఫేస్కు అవసరమైన లైనక్స్ కెర్నెల్ యొక్క సిస్టం కాల్స్ కోసం ఒక సి-లైబ్రరీ యొక్క ప్రోగ్రాం అమలు చేయడం, టూల్షైన్ అనేది లైనక్స్ డెవలప్మెంట్కు అవసరమైన ప్రోగ్రామింగ్ టూల్స్ యొక్క విస్తారమైన సేకరణ (లినక్స్ కెర్నెల్ను నిర్మించడానికి ఉపయోగించే కంపైల్స్తో సహా) స్వయంగా), మరియు కోర్యుల్స్ అనేక ప్రాథమిక Unix ఉపకరణాలను అమలు చేస్తాయి. ఈ ప్రాజెక్ట్ ప్రముఖమైన CLI షెల్ ను కూడా అభివృద్ధి చేస్తుంది. చాలావరకూ Linux వ్యవస్థలు ఉపయోగించే గ్రాఫికల్ యూజర్ ఇంటర్ఫేస్ (లేదా GUI) X విండో వ్యవస్థ యొక్క అమలు పైన నిర్మించబడింది. ఇటీవల, లైనక్స్ కమ్యూనిటీ X11 స్థానంలో కొత్త ప్రదర్శన సర్వర్ ప్రోటోకాల్గా వేన్ల్యాండ్కు ముందుకు వెళుతుంది. అనేక ఇతర ఓపెన్ సోర్స్ సాఫ్ట్వేర్ ప్రాజెక్టులు Linux వ్యవస్థలకు దోహదం చేస్తాయి.
    
    అప్లెట్
      జావా అప్లెట్లు ఇతర అనువర్తనాలలో పొందుపర్చిన ప్రోగ్రామ్లు, సాధారణంగా ఒక వెబ్ బ్రౌజర్లో ప్రదర్శించబడే వెబ్ పేజీలో ఉన్నాయి. 2017 లో జావా ఆప్లెట్ API ఇప్పుడు జావా 9 నుండి తొలగించబడింది.
    
    సర్వ్లెట్
      జావా సర్వ్లెట్ టెక్నాలజీ వెబ్ డెవలపర్ల యొక్క కార్యాచరణను విస్తరించడానికి మరియు ఉన్న వ్యాపార వ్యవస్థలను ప్రాప్తి చేయడానికి ఒక సాధారణ, స్థిరమైన విధానంతో వెబ్ డెవలపర్లను అందిస్తుంది. సర్వ్ క్లౌడ్ ల నుండి అభ్యర్థనలు (సాధారణంగా HTTP అభ్యర్ధనలు) కు ప్రతిస్పందనలను (సాధారణంగా HTML పేజీలు) ఉత్పత్తి చేసే సర్వర్-సైడ్ జావా EE భాగాలు.
వెబ్ సర్వీసెస్ కోసం రెండు ప్రామాణిక జావా టెక్నాలజీస్ ద్వారా జావా సర్వ్లేట్ API కొంతవరకు అధిగమించబడింది:
          AJAX, JSON మరియు REST సేవలకు ఉపయోగకరమైన RESTful వెబ్ సేవలు (JAX-RS 2.0) కోసం జావా API,
          XML వెబ్ సర్వీసెస్ (JAX-WS) కోసం జావా API SOAP వెబ్ సేవలకు ఉపయోగపడుతుంది.
    
    జావాసర్వర్ పేజీలు
      ప్రధాన వ్యాసం: JavaServer పేజీలు
జావాసర్వర్ పేజీలు (JSP) సర్వర్ వైపు జావా EE భాగాలు, ఇవి ప్రతిస్పందనలను ఉత్పత్తి చేస్తాయి, సాధారణంగా HTML పేజీలు, ఖాతాదారుల నుండి HTTP అభ్యర్ధనకు. JSP లు ప్రత్యేకమైన డీలిమిటర్లను <% మరియు%> ఉపయోగించి HTML పేజీలో జావా కోడ్ను పొందుపర్చాయి. ఒక JSP ఒక జావా సర్వ్లెట్గా, దాని సొంత హక్కులో ఒక జావా అప్లికేషన్కు, ఇది ప్రాప్తి చేసిన మొదటిసారి. ఆ తరువాత, ఉత్పత్తి చేయబడిన సర్వ్ ప్రతిస్పందనని సృష్టిస్తుంది.
      
    స్వింగ్ అనువర్తనం
స్వింగ్ జావా SE వేదిక కోసం ఒక గ్రాఫికల్ యూజర్ ఇంటర్ఫేస్ లైబ్రరీ. ఇది విభిన్న రూపాన్ని పేర్కొనడం మరియు స్వింగ్ యొక్క వ్యవస్థను గుర్తించదగిన రూపం మరియు అనుభూతి ద్వారా అనుభవిస్తుంది. Windows, GTK +, మరియు మోటిఫ్ యొక్క క్లోన్స్ సన్ అందించబడతాయి. ఆపిల్ కూడా మక్సోస్ కోసం ఆక్వా రూపాన్ని మరియు అనుభూతిని అందిస్తుంది. ఈ కనిపిస్తోంది మరియు అనుభూతుల యొక్క ముందస్తు అమలులు లేకపోవచ్చని భావిస్తున్నట్లయితే, జావా SE 6 లో స్వింగ్ అంతర్లీన వేదికల యొక్క మరిన్ని స్థానిక GUI విడ్జెట్ డ్రాయింగ్ నిత్యకృత్యాలను ఉపయోగించడం ద్వారా ఈ సమస్యను పరిష్కరిస్తుంది. </ Div>
      
    JavaFX అప్లికేషన్
        JavaFX అనేది డెస్క్టాప్ అనువర్తనాలను సృష్టించడం మరియు పంపిణీ చేయడంతో పాటు అనేక రకాల పరికరాల ద్వారా అమలు చేయగల గొప్ప ఇంటర్నెట్ అనువర్తనాలు (RIA లు) ఒక సాఫ్ట్వేర్ ప్లాట్ఫారమ్. జావా SEX కోసం ప్రామాణిక GUI లైబ్రరీగా స్వింగ్ను మార్చడానికి జావా FX ఉద్దేశించబడింది, కానీ రెండు భవిష్యత్తులో భవిష్యత్తులో చేర్చబడుతుంది. JavaFX డెస్క్టాప్ కంప్యూటర్లకు మరియు మైక్రోసాఫ్ట్ విండోస్, లైనక్స్ మరియు మాకోస్ లలో వెబ్ బ్రౌజర్లకు మద్దతు ఇస్తుంది. జావా FX స్థానిక OS లుక్ కోసం మద్దతు లేదు మరియు అనిపిస్తుంది. </ Div>
    
    జెనెరిక్
      2004 లో, J2SE 5.0 లో భాగంగా జెనరీ భాషలకు జేనేరిస్ చేర్చబడ్డాయి. జెనరిక్స్ పరిచయం ముందు, ప్రతి వేరియబుల్ ప్రకటన ఒక నిర్దిష్ట రకం ఉండాలి. కంటైనర్ తరగతులకు, ఉదాహరణకు, ఇది ఒక సమస్య, ఎందుకంటే నిర్దిష్ట రకాల వస్తువులు మాత్రమే అంగీకరిస్తున్న కంటెయినర్ను సృష్టించడం సులభం కాదు. ఏదైనా కంటైనర్ క్లాస్ లేదా ఇంటర్ఫేస్ యొక్క అన్ని ఉపరకాలపై పనిచేస్తుంటుంది, సాధారణంగా ఆబ్జెక్ట్ లేదా ప్రతి కంటెయిన తరగతికి వేరొక కంటైనర్ తరగతి సృష్టించబడుతుంది. జనరేటర్లు అనేక కంటైనర్ తరగతులను సృష్టించడానికి లేకుండా కంపైల్-టైమ్ టైప్ తనిఖీని అనుమతిస్తాయి, వీటిలో ప్రతి ఒక్కటి ఒకే రకమైన కోడ్ ఉంటుంది. మరింత సమర్థవంతమైన కోడ్ను ప్రారంభించడంతోపాటు, కంపైల్-సమయ లోపాలను జారీ చేయడం ద్వారా నిర్దిష్ట రన్టైమ్ మినహాయింపులు నిరోధించబడతాయి. జావా అన్ని రన్టైమ్ టైప్ లోపాలు (ClassCastException యొక్క) సంభవించకుండా నిరోధించబడితే, అది సురక్షితంగా ఉంటుంది.
            
