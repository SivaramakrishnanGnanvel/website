  Introducción
      Java es un lenguaje de programación de computadora de propósito general que es concurrente, basado en clases, orientado a objetos, [15] y diseñado específicamente para tener la menor cantidad de dependencias de implementación posibles. Está destinado a permitir que los desarrolladores de aplicaciones "escriban una vez, se ejecuten en cualquier lugar" (WORA), [16] lo que significa que el código Java compilado puede ejecutarse en todas las plataformas que admiten Java sin la necesidad de una recompilación. [17] Las aplicaciones Java generalmente se compilan a un código de bytes que puede ejecutarse en cualquier máquina virtual Java (JVM) independientemente de la arquitectura de la computadora. A partir de 2016, Java es uno de los lenguajes de programación más populares en uso, [18] [19] [20] [21], particularmente para aplicaciones web cliente-servidor, con 9 millones de desarrolladores reportados. [22] Java fue desarrollado originalmente por James Gosling en Sun Microsystems (que desde entonces ha sido adquirido por Oracle Corporation) y lanzado en 1995 como un componente central de la plataforma Java de Sun Microsystems. El lenguaje deriva gran parte de sus características originales de SmallTalk, con una sintaxis similar a C y C ++, pero tiene menos facilidades de bajo nivel que cualquiera de ellas. Los compiladores de Java, las máquinas virtuales y las bibliotecas de clases de implementación original y de referencia fueron lanzados originalmente por Sun bajo licencias propietarias. A partir de mayo de 2007, en cumplimiento de las especificaciones del Proceso de la Comunidad Java, Sun volvió a licenciar la mayoría de sus tecnologías Java bajo la Licencia Pública General de GNU. Otros también han desarrollado implementaciones alternativas de estas tecnologías de Sun, como el compilador de GNU para Java (compilador de bytecode), Classpath de GNU (bibliotecas estándar) y IcedTea-Web (complemento de navegador para applets). La última versión es Java 11, lanzada el 25 de septiembre de 2018, que sigue a Java 10 después de solo seis meses, [23] está en línea con el nuevo programa de lanzamiento. Java 8 aún es compatible, pero no habrá más actualizaciones de seguridad para Java 9. [24] Las versiones anteriores a Java 8 son compatibles con las empresas a nivel comercial; p.ej. de Oracle a Java 6 a partir de octubre de 2017 (aunque todavía "recomiendan encarecidamente que desinstale" [25] pre-Java 8 de al menos computadoras con Windows).
    
  Historia
      Duque, la mascota de java
      James Gosling, el creador de Java, en 2008
      La gráfica del índice de popularidad del lenguaje de programación TIOBE de 2002 a 2018. En el transcurso de una década, Java (azul) y C (negro) compitieron por la primera posición. James Gosling, Mike Sheridan y Patrick Naughton iniciaron el proyecto de lenguaje Java en junio de 1991. Java fue originalmente diseñado para la televisión interactiva, pero en ese momento era demasiado avanzado para la industria de la televisión por cable digital. [27] El idioma se llamaba inicialmente roble después de un roble que se encontraba fuera de la oficina de Gosling. Más tarde, el proyecto recibió el nombre de Green y finalmente cambió su nombre a Java, de Java coffee. [28] Gosling diseñó Java con una sintaxis de estilo C / C ++ que los programadores de sistemas y aplicaciones encontrarían familiares.
Sun Microsystems lanzó la primera implementación pública como Java 1.0 en 1996. [30] Prometió "Write Once, Run Anywhere" (WORA), que ofrece tiempos de ejecución sin costo en plataformas populares. Bastante seguro y con seguridad configurable, permitía restricciones de acceso a la red y a los archivos. Los principales navegadores web pronto incorporaron la capacidad de ejecutar applets de Java dentro de las páginas web, y Java rápidamente se hizo popular. El compilador Java 1.0 fue reescrito en Java por Arthur van Hoff para cumplir estrictamente con la especificación del lenguaje Java 1.0. [31] Con el advenimiento de Java 2 (lanzado inicialmente como J2SE 1.2 en diciembre de 1998 - 1999), las nuevas versiones tenían múltiples configuraciones creadas para diferentes tipos de plataformas. Las tecnologías y API incluidas en J2EE para aplicaciones empresariales normalmente se ejecutan en entornos de servidor, mientras que J2ME presenta API optimizadas para aplicaciones móviles. La versión de escritorio fue renombrada a J2SE. En 2006, con fines de marketing, Sun cambió el nombre de las nuevas versiones J2 como Java EE, Java ME y Java SE, respectivamente.
    
    Diseño
Un sistema basado en Linux es un sistema operativo modular tipo Unix, que deriva gran parte de su diseño básico de los principios establecidos en Unix durante los años 70 y 80. Dicho sistema utiliza un kernel monolítico, el kernel de Linux, que maneja el control de procesos, las redes, el acceso a los periféricos y los sistemas de archivos. Los controladores de dispositivo se integran directamente con el kernel o se agregan como módulos que se cargan mientras el sistema se está ejecutando. La zona de usuario de GNU es una parte clave de la mayoría de los sistemas basados ​​en el kernel de Linux, con Android como la notable excepción. La implementación de Project de la biblioteca C funciona como un contenedor para las llamadas de sistema del kernel de Linux necesarias para la interfaz kernel-userspace, la cadena de herramientas es una amplia colección de herramientas de programación vitales para el desarrollo de Linux (incluidos los compiladores utilizados para construir el kernel de Linux en sí), y los coreutils implementan muchas herramientas básicas de Unix. El proyecto también desarrolla un shell CLI popular. La interfaz gráfica de usuario (o GUI) utilizada por la mayoría de los sistemas Linux está construida sobre una implementación del sistema X Window. Más recientemente, la comunidad de Linux busca avanzar a Wayland como el nuevo protocolo de servidor de pantalla en lugar de X11. Muchos otros proyectos de software de fuente abierta contribuyen a los sistemas Linux.
    
    Applet
      Los applets de Java eran programas que estaban integrados en otras aplicaciones, generalmente en una página web que se muestra en un navegador web. La API del applet de Java ahora está obsoleta desde Java 9 en 2017.
    
    Servlet
      La tecnología de servlet de Java proporciona a los desarrolladores web un mecanismo simple y consistente para extender la funcionalidad de un servidor web y para acceder a los sistemas comerciales existentes. Los Servlets son componentes Java EE del lado del servidor que generan respuestas (normalmente páginas HTML) a solicitudes (típicamente solicitudes HTTP) de los clientes.
La API del servlet de Java ha sido sustituida en cierta medida por dos tecnologías estándar de Java para servicios web:
          la API de Java para servicios web RESTful (JAX-RS 2.0) útil para servicios AJAX, JSON y REST,
          la API de Java para servicios web XML (JAX-WS) útil para servicios web SOAP.
    
    Páginas JavaServer
      Artículo principal: Páginas JavaServer
Las páginas JavaServer (JSP) son componentes Java EE del lado del servidor que generan respuestas, generalmente páginas HTML, a las solicitudes HTTP de los clientes. Los JSP incorporan código Java en una página HTML utilizando los delimitadores especiales <% y%>. Un JSP se compila a un servlet de Java, una aplicación de Java en sí misma, la primera vez que se accede. Después de eso, el servlet generado crea la respuesta.
      
    Aplicación de swing
Swing es una biblioteca de interfaz gráfica de usuario para la plataforma Java SE. Es posible especificar una apariencia diferente a través del sistema de apariencia conectable de Swing. Los clones de Windows, GTK + y Motif son suministrados por Sun. Apple también proporciona una apariencia y sensación Aqua para macOS. Donde las implementaciones anteriores de estas apariencias pueden considerarse deficientes, Swing en Java SE 6 resuelve este problema mediante el uso de rutinas de dibujo de widgets GUI nativas de las plataformas subyacentes. </div>
      
    Aplicación JavaFX
        JavaFX es una plataforma de software para crear y entregar aplicaciones de escritorio, así como aplicaciones de Internet enriquecidas (RIA) que pueden ejecutarse en una amplia variedad de dispositivos. El objetivo de JavaFX es reemplazar Swing como la biblioteca GUI estándar para Java SE, pero ambas se incluirán en el futuro inmediato. JavaFX es compatible con computadoras de escritorio y navegadores web en Microsoft Windows, Linux y macOS. JavaFX no tiene soporte para la apariencia y los sentimientos nativos del SO. </div>
    
    Genéricos
      En 2004, se agregaron genéricos al lenguaje Java, como parte de J2SE 5.0. Antes de la introducción de los genéricos, cada declaración de variable tenía que ser de un tipo específico. Para las clases de contenedor, por ejemplo, esto es un problema porque no hay una manera fácil de crear un contenedor que acepte solo tipos específicos de objetos. O el contenedor opera en todos los subtipos de una clase o interfaz, generalmente Objeto, o se debe crear una clase de contenedor diferente para cada clase contenida. Los genéricos permiten la verificación de tipos en tiempo de compilación sin tener que crear muchas clases de contenedores, cada una con un código casi idéntico. Además de permitir un código más eficiente, se evita que ocurran ciertas excepciones de tiempo de ejecución, al emitir errores de tiempo de compilación. Si Java evitara que ocurrieran todos los errores de tipo de tiempo de ejecución (ClassCastException), sería de tipo seguro.
            
