  परिचय
      जावा एक सामान्य-उद्देश्य वाली कंप्यूटर-प्रोग्रामिंग भाषा है जो समवर्ती, वर्ग-आधारित, वस्तु-उन्मुख, [15] है और विशेष रूप से संभव के रूप में कुछ कार्यान्वयन निर्भरताओं के लिए डिज़ाइन की गई है। इसका उद्देश्य एप्लिकेशन डेवलपर्स को "एक बार लिखना, कहीं भी दौड़ना" (WORA), [16] का अर्थ है कि संकलित जावा कोड उन सभी प्लेटफार्मों पर चल सकता है जो जावा को पुनर्संयोजन की आवश्यकता के बिना समर्थन करते हैं। [१ application] जावा अनुप्रयोगों को आमतौर पर बाईटेकोड के लिए संकलित किया जाता है जो कंप्यूटर आर्किटेक्चर की परवाह किए बिना किसी भी जावा वर्चुअल मशीन (जेवीएम) पर चल सकता है। 2016 तक, जावा उपयोग की जाने वाली सबसे लोकप्रिय प्रोग्रामिंग भाषाओं में से एक है, [१ [] [१ ९] [२०] [२१] [२१] विशेष रूप से क्लाइंट-सर्वर वेब अनुप्रयोगों के लिए, जिसकी रिपोर्ट ९ मिलियन डेवलपर्स के पास है। [२२] जावा मूल रूप से सन माइक्रोसिस्टम्स में जेम्स गोसलिंग द्वारा विकसित किया गया था (जो कि ओरेकल कॉर्पोरेशन द्वारा अधिगृहीत किया गया है) और 1995 में सन माइक्रोसिस्टम्स के जावा प्लेटफॉर्म के एक प्रमुख घटक के रूप में जारी किया गया था। यह भाषा C और C ++ के समान सिंटैक्स के साथ, स्मॉलटॉक की अपनी मूल विशेषताओं से बहुत कुछ प्राप्त करती है, लेकिन इसमें दोनों की तुलना में कम स्तर की सुविधाएं हैं। मूल और संदर्भ कार्यान्वयन जावा संकलक, आभासी मशीन और कक्षा पुस्तकालय मूल रूप से सूर्य द्वारा मालिकाना लाइसेंस के तहत जारी किए गए थे। मई 2007 तक, जावा समुदाय प्रक्रिया की विशिष्टताओं के अनुपालन में, सूर्य ने अपनी अधिकांश जावा तकनीकों को जीएनयू जनरल पब्लिक लाइसेंस के तहत दोबारा प्राप्त किया। अन्य लोगों ने इन सूर्य प्रौद्योगिकियों के वैकल्पिक कार्यान्वयन को भी विकसित किया है, जैसे कि जीएनयू कम्पाइलर फॉर जावा (बायटेकोड कंपाइलर), जीएनयू क्लासपाथ (मानक पुस्तकालय), और आईसेडटी-वेब (एप्लेट्स के लिए ब्राउज़र प्लगइन)। नवीनतम संस्करण जावा 11 है, जिसे 25 सितंबर, 2018 को रिलीज़ किया गया था, जो केवल छह महीनों के बाद जावा 10 का अनुसरण करता है, [23] नए रिलीज़ शेड्यूल के अनुरूप। जावा 8 अभी भी समर्थित है, लेकिन जावा 9 के लिए अधिक सुरक्षा अपडेट नहीं होंगे। [२४] जावा 8 से पहले के संस्करण व्यावसायिक आधार पर कंपनियों द्वारा समर्थित हैं; जैसे अक्टूबर 2017 तक Oracle 6 से जावा 6 तक (जबकि वे अभी भी "अत्यधिक अनुशंसा करते हैं कि आप की स्थापना रद्द करें" [25] कम से कम विंडोज कंप्यूटरों से पूर्व-जावा 8)।
    
  इतिहास
      ड्यूक, जावा शुभंकर
      2008 में, जावा के निर्माता जेम्स गोसलिंग
      2002 से 2018 तक TIOBE प्रोग्रामिंग भाषा लोकप्रियता सूचकांक ग्राफ। एक दशक के दौरान, शीर्ष स्थान के लिए Java (नीला) और C (काला) का मुकाबला हुआ। जेम्स गोसलिंग, माइक शेरिडन, और पैट्रिक नॉटन ने जून 1991 में जावा भाषा परियोजना शुरू की। जावा मूल रूप से इंटरेक्टिव टेलीविजन के लिए डिज़ाइन किया गया था, लेकिन यह उस समय डिजिटल केबल टेलीविजन उद्योग के लिए बहुत उन्नत था। [२ Mike] भाषा को शुरू में ओक कहा जाता था एक ओक के पेड़ के बाद जो गोसलिंग के कार्यालय के बाहर खड़ा था। बाद में परियोजना ग्रीन नाम से चली गई और अंत में जावा का नाम जावा कॉफी से बदल दिया गया। [२ the] Gosling Java को C / C ++ स्टाइल सिंटैक्स के साथ डिज़ाइन किया गया है, जो सिस्टम और एप्लिकेशन प्रोग्रामर परिचित होगा।
सन माइक्रोसिस्टम्स ने 1996 में जावा 1.0 के रूप में पहला सार्वजनिक कार्यान्वयन जारी किया। [30] यह वादा किया था "एक बार लिखें, कहीं भी चलाएं" (श्रम), लोकप्रिय प्लेटफार्मों पर नो-कॉस्ट रन-टाइम प्रदान करता है। काफी सुरक्षित और विन्यास योग्य सुरक्षा की विशेषता, इसने नेटवर्क- और फ़ाइल-एक्सेस प्रतिबंधों की अनुमति दी। प्रमुख वेब ब्राउज़रों ने जल्द ही वेब पृष्ठों के भीतर जावा एप्लेट्स को चलाने की क्षमता को शामिल किया और जावा जल्दी लोकप्रिय हो गया। जावा 1.0 भाषा विनिर्देशन के साथ कड़ाई से अनुपालन करने के लिए आर्थर वैन हॉफ द्वारा जावा में कंपाइलर को फिर से लिखा गया था। [३१] जावा 2 के आगमन के साथ (दिसंबर 1998 - 1999 में शुरू में J2SE 1.2 के रूप में जारी), नए संस्करणों में विभिन्न प्रकार के प्लेटफार्मों के लिए कई कॉन्फ़िगरेशन बनाए गए थे। J2EE में आम तौर पर सर्वर वातावरण में चलने वाले एंटरप्राइज़ एप्लिकेशन के लिए प्रौद्योगिकियां और API शामिल थे, जबकि J2ME में एपीआई मोबाइल अनुप्रयोगों के लिए अनुकूलित थे। डेस्कटॉप संस्करण का नाम बदलकर J2SE कर दिया गया। 2006 में, विपणन उद्देश्यों के लिए, सूर्य ने क्रमशः जावा ईई, जावा एमई और जावा एसई के रूप में नए जे 2 संस्करणों का नाम बदला।
    
    डिज़ाइन
लिनक्स आधारित प्रणाली एक मॉड्यूलर यूनिक्स जैसी ऑपरेटिंग सिस्टम है, जो 1970 और 1980 के दशक के दौरान यूनिक्स में स्थापित सिद्धांतों से अपने मूल डिजाइन का बहुत कुछ हासिल करती है। ऐसी प्रणाली एक अखंड कर्नेल, लिनक्स कर्नेल का उपयोग करती है, जो प्रक्रिया नियंत्रण, नेटवर्किंग, बाह्य उपकरणों तक पहुंच और फ़ाइल सिस्टम को संभालती है। डिवाइस ड्राइवर या तो सीधे कर्नेल के साथ एकीकृत होते हैं, या सिस्टम के चलने के दौरान लोड किए गए मॉड्यूल के रूप में जोड़े जाते हैं। जीएनयू यूज़रलैंड लिनक्स कर्नेल पर आधारित अधिकांश प्रणालियों का एक महत्वपूर्ण हिस्सा है, जिसमें एंड्रॉइड उल्लेखनीय अपवाद है। सी लाइब्रेरी के प्रोजेक्ट का कार्यान्वयन कर्नेल-यूजरस्पेस इंटरफ़ेस के लिए आवश्यक लिनक्स कर्नेल के सिस्टम कॉल के लिए एक आवरण के रूप में कार्य करता है, टूलचेन लिनक्स विकास के लिए प्रोग्रामिंग टूल का एक व्यापक संग्रह है (लिनक्स कर्नेल बनाने के लिए उपयोग किए गए कंपाइलर सहित) स्वयं), और कोर्यूटिल्स कई बुनियादी यूनिक्स उपकरणों को लागू करते हैं। परियोजना एक लोकप्रिय सीएलआई शेल भी विकसित करती है। अधिकांश लिनक्स सिस्टम द्वारा उपयोग किया जाने वाला ग्राफिकल यूजर इंटरफेस (या GUI) एक्स विंडो सिस्टम के कार्यान्वयन के शीर्ष पर बनाया गया है। हाल ही में, लिनक्स समुदाय X11 के स्थान पर नए डिस्प्ले सर्वर प्रोटोकॉल के रूप में वायलैंड के लिए अग्रिम करना चाहता है। कई अन्य ओपन-सोर्स सॉफ़्टवेयर प्रोजेक्ट लिनक्स सिस्टम में योगदान करते हैं।
    
    एप्लेट
      जावा एप्लेट ऐसे प्रोग्राम थे जो अन्य अनुप्रयोगों में एम्बेडेड थे, आमतौर पर वेब ब्राउज़र में प्रदर्शित वेब पेज में। जावा एप्लेट एपीआई अब 2017 में जावा 9 के बाद से पदावनत हो गया है।
    
    सर्वलेट
      जावा सर्वलेट तकनीक वेब डेवलपर्स को वेब सर्वर की कार्यक्षमता बढ़ाने और मौजूदा व्यापार प्रणालियों तक पहुंचने के लिए एक सरल, सुसंगत तंत्र प्रदान करती है। सर्वलेट्स सर्वर-साइड जावा ईई घटक हैं जो ग्राहकों से अनुरोधों (आमतौर पर एचटीटीपी अनुरोधों) के लिए प्रतिक्रिया (आमतौर पर एचटीएमएल पेज) उत्पन्न करते हैं।
जावा सर्वलेट एपीआई को कुछ हद तक वेब सेवाओं के लिए दो मानक जावा प्रौद्योगिकियों द्वारा अधिगृहीत किया गया है:
          AJAX, JSON और REST सेवाओं के लिए उपयोगी वेब सेवा (JAX-RS 2.0) के लिए जावा एपीआई,
          XML वेब सेवा (JAX-WS) के लिए जावा एपीआई SOAP वेब सेवाओं के लिए उपयोगी है।
    
    जावास्वर पेज
      मुख्य लेख: जावास्वर पेज
जावास्वर पेज (जेएसपी) सर्वर-साइड जावा ईई घटक हैं जो ग्राहकों से HTTP अनुरोधों के लिए, आमतौर पर HTML पृष्ठ, प्रतिक्रिया उत्पन्न करते हैं। JSPs एक विशेष पृष्ठ <% और%> का उपयोग करके HTML कोड में जावा कोड एम्बेड करते हैं। एक JSP एक जावा सर्वलेट के लिए संकलित किया जाता है, एक जावा एप्लिकेशन अपने आप में, पहली बार इसे एक्सेस किया जाता है। उसके बाद, उत्पन्न सर्वलेट प्रतिक्रिया बनाता है।
      
    स्विंग आवेदन
जावा एसई प्लेटफॉर्म के लिए स्विंग एक ग्राफिकल यूजर इंटरफेस लाइब्रेरी है। स्विंगिंग के प्लगेबल लुक और फील सिस्टम के माध्यम से एक अलग लुक और फील बताना संभव है। विंडोज के क्लोन, जीटीके + और मोटिफ की आपूर्ति सूर्य द्वारा की जाती है। Apple macOS के लिए एक्वा लुक और फील भी प्रदान करता है। जहां इन लुक और फील के पूर्व कार्यान्वयन में कमी को माना जा सकता है, जावा एसई 6 में झूला अंतर्निहित प्लेटफार्मों के अधिक मूल जीयूआई विजेट ड्राइंग दिनचर्या का उपयोग करके इस समस्या को संबोधित करता है। </ div>
      
    JavaFX एप्लिकेशन
        JavaFX डेस्कटॉप अनुप्रयोगों को बनाने और वितरित करने के लिए एक सॉफ्टवेयर प्लेटफॉर्म है, साथ ही साथ समृद्ध इंटरनेट एप्लिकेशन (RIA) जो विभिन्न प्रकार के उपकरणों में चल सकते हैं। JavaFX का इरादा जावा एसई के लिए स्विंग को मानक GUI लाइब्रेरी के रूप में बदलना है, लेकिन दोनों को भविष्य के लिए शामिल किया जाएगा। JavaFX को Microsoft Windows, Linux और macOS पर डेस्कटॉप कंप्यूटर और वेब ब्राउजर के लिए सपोर्ट है। जावाएफएक्स में देशी ओएस लुक और फील के लिए सपोर्ट नहीं है। </ Div>
    
    जेनेरिक्स
      2004 में, J2SE 5.0 के भाग के रूप में जावा भाषा में जेनरिक जोड़े गए। जेनरिक की शुरुआत से पहले, प्रत्येक परिवर्तनशील घोषणा को एक विशिष्ट प्रकार का होना था। कंटेनर कक्षाओं के लिए, उदाहरण के लिए, यह एक समस्या है क्योंकि कंटेनर बनाने का कोई आसान तरीका नहीं है जो केवल विशिष्ट प्रकार की वस्तुओं को स्वीकार करता है। या तो कंटेनर एक वर्ग या इंटरफ़ेस के सभी उपप्रकारों पर कार्य करता है, आमतौर पर ऑब्जेक्ट, या प्रत्येक निहित वर्ग के लिए एक अलग कंटेनर वर्ग बनाना पड़ता है। जेनरिक कई कंटेनर क्लासेस बनाए बिना कंपाइल-टाइम टाइप चेकिंग की अनुमति देता है, प्रत्येक में लगभग समान कोड होते हैं। अधिक कुशल कोड को सक्षम करने के अलावा, कुछ रनटाइम अपवादों को संकलन-समय त्रुटियों को जारी करने से रोका जाता है। यदि जावा ने सभी रनटाइम प्रकार की त्रुटियों (ClassCastException) को होने से रोका, तो यह सुरक्षित होगा।
            
