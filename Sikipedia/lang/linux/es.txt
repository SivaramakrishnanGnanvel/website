Introducción
    
      Linux (/ ˈlɪnəks / (Acerca de esta lista de sonidos) LIN-əks) es una familia de sistemas operativos de software de fuente abierta y gratuita basados ​​en el kernel de Linux, un kernel de sistema operativo lanzado por primera vez el 17 de septiembre de 1991 por Linus Torvalds.Linux es típicamente empaquetados en una distribución de Linux (o distro para abreviar). Las distribuciones incluyen el kernel de Linux y las bibliotecas y el software del sistema de soporte, muchos de los cuales son proporcionados por el Proyecto GNU. Muchas distribuciones de Linux usan la palabra "Linux" en su nombre, pero la Free Software Foundation usa el nombre GNU / Linux para enfatizar la importancia del software de GNU, causando cierta controversia. Las distribuciones de Linux populares incluyen Debian, Fedora y Ubuntu. Las distribuciones comerciales incluyen Red Hat Enterprise Linux y SUSE Linux Enterprise Server. Las distribuciones de Linux de escritorio incluyen un sistema de ventanas como X11 o Wayland, y un entorno de escritorio como GNOME o KDE Plasma. Las distribuciones destinadas a los servidores pueden omitir los gráficos por completo e incluir una pila de soluciones como LAMP. Debido a que Linux se puede redistribuir libremente, cualquiera puede crear una distribución para cualquier propósito. Linux fue originalmente desarrollado para computadoras personales basadas en la arquitectura Intel x86, pero desde entonces ha sido portado a más plataformas que cualquier otro sistema operativo. Linux es el sistema operativo líder en servidores y otros sistemas grandes de hierro, como las computadoras centrales, y el único sistema operativo usado en las supercomputadoras TOP500 (desde noviembre de 2017, habiendo eliminado gradualmente a todos los competidores). Es utilizado por aproximadamente el 2,3 por ciento de las computadoras de escritorio. El Chromebook, que ejecuta el núcleo de Linux basado en Chrome OS, domina el mercado educativo de EE. UU. K-12 y representa casi el 20 por ciento de las ventas de computadoras portátiles de menos de $ 300 en los Estados Unidos. Linux también se ejecuta en sistemas integrados, es decir, dispositivos cuyo sistema operativo está típicamente integrado en el firmware y está altamente adaptado al sistema. Esto incluye enrutadores, controles de automatización, televisores, grabadoras de video digitales, consolas de videojuegos y relojes inteligentes. Muchos teléfonos inteligentes y tabletas ejecutan Android y otros derivados de Linux. Debido al predominio de Android en los teléfonos inteligentes, Linux tiene la base instalada más grande de todos los sistemas operativos de uso general. Linux es uno de los ejemplos más destacados de software gratuito y de código abierto. colaboración. El código fuente puede ser usado, modificado y distribuido, comercial o no comercialmente, por cualquier persona bajo los términos de sus respectivas licencias, como la Licencia Pública General de GNU.
    Historia
      Artículo principal: Historia de Linux.
      Precursores
      Linus Torvalds, autor principal del kernel de Linux

      El sistema operativo Unix fue concebido e implementado en 1969, en los Laboratorios Bell de AT&T en los Estados Unidos por Ken Thompson, Dennis Ritchie, Douglas McIlroy y Joe Ossanna. Primero lanzado en 1971, Unix fue escrito completamente en lenguaje ensamblador, como era una práctica común en el momento. Más tarde, en un enfoque pionero clave en 1973, fue reescrito en el lenguaje de programación C por Dennis Ritchie (con la excepción de algunas rutinas de hardware y E / S). La disponibilidad de una implementación de lenguaje de alto nivel de Unix facilitó su traslado a diferentes plataformas de computadoras.
      Debido a un caso antimonopolio anterior que le prohibió ingresar al negocio de las computadoras, se le solicitó a AT&T que le otorgase la licencia del código fuente del sistema operativo a cualquiera que lo pidiera. Como resultado, Unix creció rápidamente y fue ampliamente adoptado por instituciones académicas y empresas. En 1984, AT&T se despojó de los Bell Labs; liberado de la obligación legal que requiere licencia gratis, Bell Labs comenzó a vender Unix como un producto patentado, donde los usuarios no podían legalmente modificar Unix. El Proyecto GNU, iniciado en 1983 por Richard Stallman, tenía el objetivo de crear un "sistema completo de software compatible con Unix" compuesto completamente de software libre. El trabajo comenzó en 1984. Más tarde, en 1985, Stallman comenzó la Free Software Foundation y escribió la Licencia Pública General de GNU (GNU GPL) en 1989. A principios de la década de 1990, muchos de los programas requerían un sistema operativo (como bibliotecas, compiladores). Se completaron los editores de texto, un shell de Unix y un sistema de ventanas, aunque los elementos de bajo nivel, como los controladores de dispositivos, los demonios y el kernel, llamado GNU / Hurd, estaban estancados e incompletos.
 
    Diseño
      Un sistema basado en Linux es un sistema operativo modular tipo Unix, que deriva gran parte de su diseño básico de los principios establecidos en Unix durante los años 70 y 80. Dicho sistema utiliza un kernel monolítico, el kernel de Linux, que maneja el control de procesos, las redes, el acceso a los periféricos y los sistemas de archivos. Los controladores de dispositivo se integran directamente con el kernel o se agregan como módulos que se cargan mientras el sistema se está ejecutando.
      La zona de usuario de GNU es una parte clave de la mayoría de los sistemas basados ​​en el kernel de Linux, con Android como la notable excepción. La implementación de Project de la biblioteca C funciona como un contenedor para las llamadas de sistema del kernel de Linux necesarias para la interfaz kernel-userspace, la cadena de herramientas es una amplia colección de herramientas de programación vitales para el desarrollo de Linux (incluidos los compiladores utilizados para construir el kernel de Linux en sí), y los coreutils implementan muchas herramientas básicas de Unix. El proyecto también desarrolla un shell CLI popular. La interfaz gráfica de usuario (o GUI) utilizada por la mayoría de los sistemas Linux está construida sobre una implementación del sistema X Window. Más recientemente, la comunidad de Linux busca avanzar a Wayland como el nuevo protocolo de servidor de pantalla en lugar de X11. Muchos otros proyectos de software de fuente abierta contribuyen a los sistemas Linux.
    
    Programación en Linux
      Las distribuciones de Linux soportan docenas de lenguajes de programación. Las herramientas de desarrollo originales utilizadas para crear aplicaciones de Linux y programas del sistema operativo se encuentran dentro de la cadena de herramientas GNU, que incluye la Colección de compiladores GNU (GCC) y el Sistema de compilación GNU. Entre otros, GCC proporciona compiladores para Ada, C, C ++, Go y Fortran. Muchos lenguajes de programación tienen una implementación de referencia multiplataforma que soporta Linux, por ejemplo, PHP, Perl, Ruby, Python, Java, Go, Rust y Haskell. Lanzado por primera vez en 2003, el proyecto LLVM ofrece un compilador alternativo de código abierto y multiplataforma para muchos idiomas. Los compiladores propietarios para Linux incluyen el compilador Intel C ++, Sun Studio y el compilador IBM XL C / C ++. BASIC en la forma de Visual Basic se admite en formas como Gambas, FreeBASIC y XBasic, y en términos de programación de terminal o programación QuickBASIC o Turbo BASIC en forma de QB64.
      Una característica común de los sistemas similares a Unix, Linux incluye lenguajes de programación de propósitos específicos tradicionales dirigidos a scripts, procesamiento de textos y configuración y administración del sistema en general. Las distribuciones de Linux soportan shell scripts, awk, sed y make. Muchos programas también tienen un lenguaje de programación incorporado para admitir la configuración o la programación. Por ejemplo, las expresiones regulares son compatibles con programas como grep y localizar, el tradicional Unix MTA Sendmail contiene su propio sistema de scripting completo de Turing, y el editor de texto avanzado GNU Emacs se basa en un intérprete Lisp de propósito general.
      La mayoría de las distribuciones también incluyen soporte para PHP, Perl, Ruby, Python y otros lenguajes dinámicos. Si bien no es tan común, Linux también admite C # (a través de Mono), Vala y Scheme. Guile Scheme actúa como un lenguaje de extensión dirigido a las utilidades del sistema GNU, que busca hacer que los programas C compilados, estáticos y convencionalmente pequeños, del diseño Unix se extiendan rápida y dinámicamente a través de un sistema de scripting elegante y funcional de alto nivel; muchos programas GNU se pueden compilar con enlaces opcionales de Guile para este fin. Una serie de máquinas virtuales Java y kits de desarrollo se ejecutan en Linux, incluida la JVM (HotSpot) de Sun Microsystems original y J2SE RE de IBM, así como muchos proyectos de código abierto como Kaffe y JikesRVM. GNOME y KDE son entornos de escritorio populares y proporcionan un marco para el desarrollo de aplicaciones. Estos proyectos se basan en los kits de herramientas de widgets de GTK + y Qt, respectivamente, que también se pueden usar independientemente del marco general. Ambos soportan una amplia variedad de idiomas. Hay una serie de entornos de desarrollo integrados disponibles que incluyen Anjuta, Code :: Blocks, CodeLite, Eclipse, Geany, ActiveState Komodo, KDevelop, Lazarus, MonoDevelop, NetBeans y Qt Creator, mientras que los editores de larga data Vim, nano y Emacs permanecen popular.
    
    Escritorio
    
      La popularidad de Linux en computadoras de escritorio y portátiles estándar ha ido en aumento a lo largo de los años. La mayoría de las distribuciones modernas incluyen un entorno de usuario gráfico, ya que, desde febrero de 2015, los dos entornos más populares son KDE Plasma Desktop y Xfce. No existe un solo escritorio oficial de Linux: más bien, los entornos de escritorio y las distribuciones de Linux seleccionan componentes de un conjunto de software gratuito y de código abierto con el que construyen una GUI que implementa una guía de diseño más o menos estricta. GNOME, por ejemplo, tiene sus pautas de interfaz humana como una guía de diseño, que le da a la interfaz hombre-máquina un papel importante, no solo al hacer el diseño gráfico, sino también al considerar a personas con discapacidades, e incluso cuando se enfoca en la seguridad.
      La naturaleza colaborativa del desarrollo de software libre permite a los equipos distribuidos realizar la localización del idioma de algunas distribuciones de Linux para su uso en lugares donde la localización de sistemas propietarios no sería rentable. Por ejemplo, la versión en idioma cingalés de la distribución Knoppix estuvo disponible significativamente antes de que Microsoft tradujera Windows XP al cingalés. En este caso, el Grupo de Usuarios de Linux Lanka jugó un papel importante en el desarrollo del sistema localizado al combinar el conocimiento de profesores universitarios, lingüistas y Desarrolladores locales.
      Rendimiento y aplicaciones
      El rendimiento de Linux en el escritorio ha sido un tema controvertido; por ejemplo, en 2007 Con Kolivas acusó a la comunidad Linux de favorecer el rendimiento en los servidores. Abandonó el desarrollo del kernel de Linux por frustración con esta falta de enfoque en el escritorio, y luego dio una entrevista "a todos" sobre el tema. Desde entonces, una cantidad significativa de desarrollo se ha centrado en mejorar la experiencia de escritorio. Los proyectos como Upstart y systemd apuntan a un tiempo de arranque más rápido; Los proyectos Wayland y Mir apuntan a reemplazar X11 a la vez que mejoran el rendimiento, la seguridad y la apariencia del escritorio. Muchas aplicaciones populares están disponibles para una amplia variedad de sistemas operativos. Por ejemplo, Mozilla Firefox, OpenOffice.org/LibreOffice y Blender tienen versiones descargables para todos los principales sistemas operativos. Además, algunas aplicaciones desarrolladas inicialmente para Linux, como Pidgin y GIMP, fueron portadas a otros sistemas operativos (incluyendo Windows y macOS) debido a su popularidad. Además, un número creciente de aplicaciones de escritorio propietarias también son compatibles con Linux, como Autodesk Maya, Softimage XSI y Apple Shake en el campo de alta gama de animación y efectos visuales; Vea la lista de software propietario para Linux para más detalles. También hay varias compañías que han transferido sus propios juegos o los de otras compañías a Linux, y Linux también es una plataforma compatible con los populares servicios de distribución digital Steam y Desura.
      Muchos otros tipos de aplicaciones disponibles para Microsoft Windows y macOS también se ejecutan en Linux. Comúnmente, existirá una aplicación de software gratuita que cumpla con las funciones de una aplicación encontrada en otro sistema operativo, o esa aplicación tendrá una versión que funcione en Linux, como Skype y algunos videojuegos como Dota 2 y Team Fortress 2. Además, el proyecto Wine proporciona una capa de compatibilidad de Windows para ejecutar aplicaciones de Windows no modificadas en Linux. Está patrocinado por intereses comerciales, incluido CodeWeavers, que produce una versión comercial del software. Desde 2009, Google también ha proporcionado fondos para el proyecto Wine.CrossOver, una solución patentada basada en el proyecto Wine de código abierto, admite la ejecución de versiones de Microsoft Office para Windows, aplicaciones Intuit como Quicken y QuickBooks, versiones de Adobe Photoshop a través de CS2, y Muchos juegos populares como World of Warcraft. En otros casos, donde no hay un puerto de Linux de algún software en áreas como la edición de escritorio y el audio profesional, hay un software equivalente disponible en Linux. También es posible ejecutar aplicaciones escritas para Android en otras versiones de Linux usando Anbox.
      Componentes e instalación
      Además de los componentes visibles externamente, como los gestores de ventanas X, los programas alojados en freedesktop.org, como D-Bus o PulseAudio, desempeñan un papel no obvio pero bastante central; los dos entornos de escritorio principales (GNOME y KDE) los incluyen, cada uno con front-ends gráficos escritos utilizando el kit de herramientas correspondiente (GTK + o Qt). Un servidor de visualización es otro componente, que durante más tiempo se ha comunicado con sus clientes en el protocolo del servidor de visualización X11; El software prominente que habla X11 incluye el servidor X.Org y Xlib. La frustración por el engorroso protocolo central X11, y especialmente por sus numerosas extensiones, ha llevado a la creación de un nuevo protocolo de servidor de pantalla, Wayland. La instalación, actualización y eliminación de software en Linux se realiza normalmente mediante el uso de gestores de paquetes como Synaptic Package Manager, PackageKit y Yum Extender. Si bien la mayoría de las principales distribuciones de Linux tienen repositorios extensos, que a menudo contienen decenas de miles de paquetes, no todo el software que puede ejecutarse en Linux está disponible en los repositorios oficiales. Alternativamente, los usuarios pueden instalar paquetes desde repositorios no oficiales, descargar paquetes precompilados directamente desde sitios web o compilar el código fuente por sí mismos. Todos estos métodos vienen con diferentes grados de dificultad; en general, la compilación del código fuente se considera un proceso desafiante para los nuevos usuarios de Linux, pero apenas es necesario en las distribuciones modernas y no es un método específico de Linux.
    

